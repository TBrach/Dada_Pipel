r Sys.Date()
Sys.Date()
# source("https://bioconductor.org/biocLite.R")
# biocLite("phyloseq")
library(phyloseq); packageVersion("phyloseq")
version$version.string
library(phyloseq); # packageVersion("phyloseq")
library(dada2); # packageVersion("dada2")
library(vegan); # packageVersion("vegan")
library(ggplot2); # packageVersion("ggplot2")
library(dplyr); # packageVersion("dplyr")
library(tidyr); # packageVersion("tidyr")
library(gridExtra); # packageVersion("gridExtra")
library(xtable); # packageVersion("xtable")
library(RVAideMemoire); #packageVersion("RVAideMemoire")
library(viridis); # packageVersion("viridis")
library(scales); # packageVersion("scales") # for the oob = squish option in gradient plots
library(ggthemes); # packageVersion("ggthemes")
library(DESeq2); # packageVersion("DESeq2")
library(ggpubr);
search()
PackageVersions <- data.frame(R = version$version.string,
phyloseq = packageVersion("phyloseq"),,
dada2 = packageVersion("dada2"),
vegan = packageVersion("vegan"),
ggplot2 = packageVersion("ggplot2"),
dplyr = packageVersion("dplyr"),
tidyr = packageVersion("tidyr"),
gridExtra = packageVersion("gridExtra"),
xtable = packageVersion("xtable"),
viridis = packageVersion("viridis"),
scales = packageVersion("scales"),
ggthemes = packageVersion("ggthemes"),
DESeq2 = packageVersion("DESeq2"),
ggpubr = packageVersion("ggpubr"))
PackageVersions <- data.frame(R = version$version.string,
phyloseq = packageVersion("phyloseq"),
dada2 = packageVersion("dada2"),
vegan = packageVersion("vegan"),
ggplot2 = packageVersion("ggplot2"),
dplyr = packageVersion("dplyr"),
tidyr = packageVersion("tidyr"),
gridExtra = packageVersion("gridExtra"),
xtable = packageVersion("xtable"),
viridis = packageVersion("viridis"),
scales = packageVersion("scales"),
ggthemes = packageVersion("ggthemes"),
DESeq2 = packageVersion("DESeq2"),
ggpubr = packageVersion("ggpubr"))
View(PackageVersions)
str(PackageVersions)
PackageVersionsAnal <- tidyr::gather(PackageVersions, key = Package, value = Version) %>% dplyr::arrange(Package)
for (i in 1:ncol(PackageVersions)){
PackageVersions[,i] <- as.character(PackageVersions[,i])
}
PackageVersionsAnal <- tidyr::gather(PackageVersions, key = Package, value = Version) %>% dplyr::arrange(Package)
View(PackageVersionsAnal)
PackageVersions <- data.frame(R = version$version.string,
phyloseq = packageVersion("phyloseq"),
dada2 = packageVersion("dada2"),
vegan = packageVersion("vegan"),
ggplot2 = packageVersion("ggplot2"),
dplyr = packageVersion("dplyr"),
tidyr = packageVersion("tidyr"),
gridExtra = packageVersion("gridExtra"),
xtable = packageVersion("xtable"),
viridis = packageVersion("viridis"),
scales = packageVersion("scales"),
ggthemes = packageVersion("ggthemes"),
DESeq2 = packageVersion("DESeq2"),
ggpubr = packageVersion("ggpubr"))
for (i in 1:ncol(PackageVersions)){
PackageVersions[,i] <- as.character(PackageVersions[,i])
}
PackageVersionsAnal <- tidyr::gather(PackageVersions, key = Package, value = Version)
View(PackageVersionsAnal)
PackageVersions_l <- tidyr::gather(PackageVersions, key = Package, value = Version)
PacakgeVersions_l
PackageVersions <- data.frame(R = version$version.string,
phyloseq = packageVersion("phyloseq"),
dada2 = packageVersion("dada2"),
vegan = packageVersion("vegan"),
ggplot2 = packageVersion("ggplot2"),
dplyr = packageVersion("dplyr"),
tidyr = packageVersion("tidyr"),
gridExtra = packageVersion("gridExtra"),
xtable = packageVersion("xtable"),
viridis = packageVersion("viridis"),
scales = packageVersion("scales"),
ggthemes = packageVersion("ggthemes"),
DESeq2 = packageVersion("DESeq2"),
ggpubr = packageVersion("ggpubr"))
for (i in 1:ncol(PackageVersions)){
PackageVersions[,i] <- as.character(PackageVersions[,i])
}
PackageVersions_l <- tidyr::gather(PackageVersions, key = Package, value = Version)
PackageVersions_l
PackageVersions_l$Package
PackageVersions_l <- tidyr::gather(PackageVersions, key = Package, value = Version) %>% PackageVersions_l[2:nrow(PackageVersions_l), ] <- dplyr::arrange(PackageVersions_l[2:nrow(PackageVersions_l), ], Package)
PackageVersions_l <- tidyr::gather(PackageVersions, key = Package, value = Version) PackageVersions_l[2:nrow(PackageVersions_l), ] <- dplyr::arrange(PackageVersions_l[2:nrow(PackageVersions_l), ], Package)
PackageVersions <- data.frame(R = version$version.string,
phyloseq = packageVersion("phyloseq"),
dada2 = packageVersion("dada2"),
vegan = packageVersion("vegan"),
ggplot2 = packageVersion("ggplot2"),
dplyr = packageVersion("dplyr"),
tidyr = packageVersion("tidyr"),
gridExtra = packageVersion("gridExtra"),
xtable = packageVersion("xtable"),
viridis = packageVersion("viridis"),
scales = packageVersion("scales"),
ggthemes = packageVersion("ggthemes"),
DESeq2 = packageVersion("DESeq2"),
ggpubr = packageVersion("ggpubr"))
for (i in 1:ncol(PackageVersions)){
PackageVersions[,i] <- as.character(PackageVersions[,i])
}
PackageVersions_l <- tidyr::gather(PackageVersions, key = Package, value = Version) PackageVersions_l[2:nrow(PackageVersions_l), ] <- dplyr::arrange(PackageVersions_l[2:nrow(PackageVersions_l), ], Package)
PackageVersions_l <- tidyr::gather(PackageVersions, key = Package, value = Version)
PackageVersions_l[2:nrow(PackageVersions_l), ]
dplyr::arrange(PackageVersions_l[2:nrow(PackageVersions_l), ], Package)
PackageVersions_l[2:nrow(PackageVersions_l), ] <- dplyr::arrange(PackageVersions_l[2:nrow(PackageVersions_l), ], Package)
knitr::kable(PackageVersionsAnal)
options(knitr.table.format = "latex")
# - packaged from Mani's analysis that I could add -
library(cowplot)
library(coin)
library(ade4)
library(ggrepel)
PackageVersions_l
library(ggforce)
install.packages("ggforce")
library(ggforce)
library(bookdown)
library(kableExtra)
install.packages("kableExtra")
library(RColorBrewer)
library(bindrcpp)
library(stringr)
library(pheatmap)
library(BiocParallel)
library(microbiomeX)
my_palette = list(Enterotype = "Dark2", Country = "Paired", Status = "Set2", complex_group = "Set2", Metformin = "Accent", Significance = "PuRd")
my_palette
